<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="levelList" targetNamespace="http://tempuri.org/levelList1.xsd" xmlns:mstns="http://tempuri.org/levelList1.xsd" xmlns="http://tempuri.org/levelList1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="euiConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="euiConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.AutomatedSalaryProcessingSystem.Properties.Settings.GlobalReference.Default.euiConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="levelTableAdapter" GeneratorDataComponentClassName="levelTableAdapter" Name="level" UserDataComponentName="levelTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="euiConnectionString1 (Settings)" DbObjectName="eui.dbo.level" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[level] WHERE (([levelID] = @Original_levelID) AND ((@IsNull_levelname = 1 AND [levelname] IS NULL) OR ([levelname] = @Original_levelname)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_levelID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="levelID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_levelname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="levelname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_levelname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="levelname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[level] ([levelname]) VALUES (@levelname);
SELECT levelID, levelname FROM level WHERE (levelID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@levelname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="levelname" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT levelID, levelname FROM dbo.[level]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[level] SET [levelname] = @levelname WHERE (([levelID] = @Original_levelID) AND ((@IsNull_levelname = 1 AND [levelname] IS NULL) OR ([levelname] = @Original_levelname)));
SELECT levelID, levelname FROM level WHERE (levelID = @levelID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@levelname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="levelname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_levelID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="levelID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_levelname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="levelname" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_levelname" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="levelname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="levelID" ColumnName="levelID" DataSourceName="eui.dbo.level" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@levelID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="levelID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="levelID" DataSetColumn="levelID" />
              <Mapping SourceColumn="levelname" DataSetColumn="levelname" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="levelList" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="levelList" msprop:Generator_UserDSName="levelList">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="level" msprop:Generator_TableClassName="levelDataTable" msprop:Generator_TableVarName="tablelevel" msprop:Generator_TablePropName="level" msprop:Generator_RowDeletingName="levelRowDeleting" msprop:Generator_RowChangingName="levelRowChanging" msprop:Generator_RowEvHandlerName="levelRowChangeEventHandler" msprop:Generator_RowDeletedName="levelRowDeleted" msprop:Generator_UserTableName="level" msprop:Generator_RowChangedName="levelRowChanged" msprop:Generator_RowEvArgName="levelRowChangeEvent" msprop:Generator_RowClassName="levelRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="levelID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnlevelID" msprop:Generator_ColumnPropNameInRow="levelID" msprop:Generator_ColumnPropNameInTable="levelIDColumn" msprop:Generator_UserColumnName="levelID" type="xs:int" />
              <xs:element name="levelname" msprop:Generator_ColumnVarNameInTable="columnlevelname" msprop:Generator_ColumnPropNameInRow="levelname" msprop:Generator_ColumnPropNameInTable="levelnameColumn" msprop:Generator_UserColumnName="levelname" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:level" />
      <xs:field xpath="mstns:levelID" />
    </xs:unique>
  </xs:element>
</xs:schema>